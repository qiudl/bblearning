{
  "info": {
    "name": "BBLearning API Tests",
    "description": "Complete API test suite for BBLearning MVP",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variables": [
    {
      "key": "base_url",
      "value": "http://localhost:8080/api/v1",
      "type": "default"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "default"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "default"
    },
    {
      "key": "test_username",
      "value": "testuser_{{$randomInt}}",
      "type": "default"
    },
    {
      "key": "test_password",
      "value": "TestPassword123!",
      "type": "default"
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "1.1 Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{test_username}}\",\n  \"password\": \"{{test_password}}\",\n  \"grade\": \"7\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains tokens\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('access_token');",
                  "    pm.expect(jsonData.data).to.have.property('refresh_token');",
                  "    pm.collectionVariables.set('access_token', jsonData.data.access_token);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.2 Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{test_username}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains tokens\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('access_token');",
                  "    pm.expect(jsonData.data).to.have.property('refresh_token');",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.collectionVariables.set('access_token', jsonData.data.access_token);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.3 Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"New tokens received\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('access_token');",
                  "    pm.expect(jsonData.data).to.have.property('refresh_token');",
                  "    pm.collectionVariables.set('access_token', jsonData.data.access_token);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "1.4 Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. User Management",
      "item": [
        {
          "name": "2.1 Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User data returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('username');",
                  "    pm.expect(jsonData.data).to.have.property('grade');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2.2 Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grade\": \"8\",\n  \"avatar\": \"https://example.com/avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Knowledge & Chapters",
      "item": [
        {
          "name": "3.1 Get Chapters by Grade",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chapters?grade=7",
              "host": ["{{base_url}}"],
              "path": ["chapters"],
              "query": [
                {
                  "key": "grade",
                  "value": "7"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Chapters array returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3.2 Get Knowledge Points",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/knowledge?grade=7",
              "host": ["{{base_url}}"],
              "path": ["knowledge"],
              "query": [
                {
                  "key": "grade",
                  "value": "7"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "3.3 Get Knowledge Point Detail",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/knowledge/:id",
              "host": ["{{base_url}}"],
              "path": ["knowledge", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "4. Practice",
      "item": [
        {
          "name": "4.1 Generate Practice Questions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"knowledge_point_id\": 1,\n  \"count\": 5,\n  \"difficulty\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/practice/generate",
              "host": ["{{base_url}}"],
              "path": ["practice", "generate"]
            }
          },
          "response": []
        },
        {
          "name": "4.2 Submit Answer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"question_id\": 1,\n  \"user_answer\": \"C\",\n  \"time_spent\": 30\n}"
            },
            "url": {
              "raw": "{{base_url}}/practice/submit",
              "host": ["{{base_url}}"],
              "path": ["practice", "submit"]
            }
          },
          "response": []
        },
        {
          "name": "4.3 Get Practice Records",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/practice/records?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["practice", "records"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "5. AI Chat",
      "item": [
        {
          "name": "5.1 Send Chat Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"请解释勾股定理\",\n  \"context\": {\n    \"knowledge_point_id\": 1\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai/chat",
              "host": ["{{base_url}}"],
              "path": ["ai", "chat"]
            }
          },
          "response": []
        },
        {
          "name": "5.2 OCR Math Problem",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": ""
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/ai/ocr",
              "host": ["{{base_url}}"],
              "path": ["ai", "ocr"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "6. Wrong Questions",
      "item": [
        {
          "name": "6.1 Get Wrong Questions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/wrong-questions?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["wrong-questions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "6.2 Mark Wrong Question Resolved",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/wrong-questions/:id/resolve",
              "host": ["{{base_url}}"],
              "path": ["wrong-questions", ":id", "resolve"],
              "variable": [
                {
                  "key": "id",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "7. Reports",
      "item": [
        {
          "name": "7.1 Get Learning Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/learning?start_date=2025-01-01&end_date=2025-12-31",
              "host": ["{{base_url}}"],
              "path": ["reports", "learning"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2025-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2025-12-31"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "7.2 Get Weak Points",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/weak-points",
              "host": ["{{base_url}}"],
              "path": ["reports", "weak-points"]
            }
          },
          "response": []
        },
        {
          "name": "7.3 Get Progress",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/reports/progress",
              "host": ["{{base_url}}"],
              "path": ["reports", "progress"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "8. Error Cases",
      "item": [
        {
          "name": "8.1 Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"invalid_user\",\n  \"password\": \"wrong_password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "8.2 Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "8.3 Not Found",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/nonexistent",
              "host": ["{{base_url}}"],
              "path": ["nonexistent"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}
